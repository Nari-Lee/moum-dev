<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moum.project.dao.CommentDao">

    <!-- CommentMap: Comment 객체와 매핑 -->
    <resultMap id="CommentRequest" type="moum.project.vo.CommentRequest">
        <id column="comment_id" property="no"/>
        <result column="user_id" property="userNo"/>
        <result column="board_id" property="boardNo"/>
        <result column="content" property="content"/>
        <result column="date" property="date"/>
        <result column="original_comment_id" property="originalCommentNo"/>
        <result column="is_public" property="isPublic"/>
    </resultMap>

    <resultMap id="CommentResponse" type="moum.project.vo.CommentResponse">
        <id column="comment_id" property="no"/>
        <result column="user_id" property="userNo"/>
        <result column="board_id" property="boardNo"/>
        <result column="content" property="content"/>
        <result column="date" property="date"/>
        <result column="original_comment_id" property="originalCommentNo"/>
        <result column="is_public" property="isPublic"/>
    </resultMap>

    <!-- 댓글 목록 조회 (list) -->
    <select id="findAll" resultMap="CommentResponse">
        SELECT
        comment_id,
        user_id,
        board_id,
        content,
        date,
        original_comment_id,
        is_public
        FROM
        comment
        WHERE
        board_id = #{boardNo}
        ORDER BY
        date DESC
    </select>

    <!-- 특정 댓글 조회 (selectById) -->
    <select id="findById" resultMap="CommentResponse" parameterType="int">
        SELECT
        comment_id,
        user_id,
        board_id,
        content,
        date,
        original_comment_id,
        is_public
        FROM
        comment
        WHERE
        comment_id = #{no}
    </select>

    <!-- 새 댓글 생성 (insert) -->
    <insert id="save" parameterType="moum.project.vo.CommentRequest" useGeneratedKeys="true" keyProperty="no" keyColumn="comment_id">
        INSERT INTO comment (comment_id, user_id, board_id, content, date, original_comment_id, is_public)
        VALUES (#{no}, #{userNo}, #{boardNo}, #{content}, NOW(), #{originalCommentNo}, #{isPublic})
    </insert>

    <!-- 댓글 수정 (update) -->
    <update id="update" parameterType="moum.project.vo.CommentRequest">
        UPDATE comment
        SET
        content = #{content},
        is_public = #{isPublic}
        WHERE
        comment_id = #{no}
    </update>

    <!-- 댓글 삭제 (delete) -->
    <delete id="delete" parameterType="int">
        DELETE FROM comment
        WHERE comment_id = #{no}
    </delete>

</mapper>