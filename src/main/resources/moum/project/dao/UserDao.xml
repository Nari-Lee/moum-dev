<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moum.project.dao.UserDao">

    <resultMap id="UserMap" type="moum.project.vo.User">
        <id column="user_id" property="no"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="admin" property="admin"/>
        <result column="photo" property="photo"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="last_login" property="lastLogin"/>
        <result column="sns_id" property="snsId"/>
    </resultMap>

    <select id="list" resultMap="UserMap">
        select
        user_id,
        nickname,
        email,
        admin,
        photo,
        start_date,
        end_date,
        last_login,
        sns_id
        from
        user
        order by
        user_id asc
    </select>

    <select id="listByPage" resultMap="UserMap" parameterType="map">
        select
            user_id,
            nickname,
            email,
            admin,
            photo,
            start_date,
            end_date,
            last_login,
            sns_id
        from
            user
        order by
            user_id asc
        limit #{pageNo}, #{pageCount}
    </select>

    <insert id="insert" parameterType="moum.project.vo.User"
            useGeneratedKeys="true" keyColumn="user_id" keyProperty="no">
        insert into user(nickname, email, password, admin, photo, end_date, last_login, sns_id)
        values (#{nickname}, #{email}, #{password}, #{admin}, #{photo}, #{endDate}, #{lastLogin}, #{snsId})
    </insert>

    <select id="findBy" resultMap="UserMap" parameterType="int">
        select
        user_id,
        nickname,
        email,
        admin,
        photo,
        start_date,
        end_date,
        last_login,
        sns_id
        from
        user
        where
        user_id=#{no}
    </select>


    <select id="findByEmail" resultMap="UserMap">
        select
        user_id,
        nickname,
        email,
        password,
        admin,
        photo,
        start_date,
        end_date,
        last_login,
        sns_id
        from
        user
        where
        email=#{email}
    </select>

    <select id="findByEmailAndPassword" resultMap="UserMap">
        select
        user_id,
        nickname,
        email,
        admin,
        photo,
        start_date,
        end_date,
        last_login,
        sns_id
        from
        user
        where
        email=#{email} and password=#{password}
    </select>

    <select id="findByNickname" resultMap="UserMap">
        select
        user_id,
        nickname,
        email,
        admin,
        photo,
        start_date,
        end_date,
        last_login,
        sns_id
        from
        user
        where
        nickname = #{nickname}
    </select>


    <update id="update" parameterType="moum.project.vo.User">
        update user set
        nickname=#{nickname},
        email=#{email},
        password=#{password},
        admin=#{admin},
        photo=#{photo},
        start_date=#{startDate},
        end_date=#{endDate},
        last_login=#{lastLogin},
        sns_id=#{snsId}
        where
        user_id=#{no}
    </update>

    <update id="updateLastLogin" parameterType="map">
        update user set
        last_login = #{lastLoginTime}
        WHERE user_id = #{userId}
    </update>

    <delete id="delete" parameterType="int">
        delete from user
        where user_id=#{no}
    </delete>
</mapper>
